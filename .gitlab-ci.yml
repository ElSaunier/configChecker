# This file is a template, and might need editing before it works on your project.
image: golang:latest

variables:
  # Please edit to your GitLab project
  REPO_NAME: outils.docapost.tech/gitlab/losaunier/configChecker
  http_proxy: http://proxyace2.prod.extelia.fr:8080
  https_proxy: http://proxyace2.prod.extelia.fr:8080

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME
  - docker build -t losaunier/go-promtool-amtool

stages:
  - test
  - build
  - deploy

format:
  stage: test
  image: losaunier/go-promtool-amtool:latest
  script:
    - http_proxy= go fmt $(go list ./... | grep -v /vendor/)
    - go get $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)
  tags:
    - bayezid1

compile:
  stage: build
  script:
    - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/mybinary
  artifacts:
    paths:
      - mybinary
  tags:
    - bayezid1
